name: Release

on:
  release:
    types: [published]

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: katyo/publish-crates@v2
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          ignore-unpublished-changes: true

  homebrew:
    name: Update Homebrew Formula
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ASleepyCat/homebrew-tap
      - name: Update Formula
        run: |
          cat <<EOF > Formula/tfswitcher.rb
          class Tfswitcher < Formula
            desc "Terraform and OpenTofu version switcher"
            homepage "https://github.com/ASleepyCat/tfswitcher"
            url "https://github.com/ASleepyCat/tfswitcher/archive/refs/tags/${{ github.event.release.tag_name }}.tar.gz"
            sha256 "$(curl -sL https://codeload.github.com/ASleepyCat/tfswitcher/tar.gz/refs/tags/${{ github.event.release.tag_name }} | shasum -a 256 | cut -d " " -f1)"
            license "MIT"

            depends_on "openssl" => :build
            depends_on "pkg-config" => :build
            depends_on "rust" => :build

            # TODO: Add OpenTofu when it gets added to homebrew-core
            conflicts_with "terraform", because: "tfswitcher overwrites the current terraform install"

            def install
              system "cargo", "install", *std_cargo_args
            end

            test do
              assert_match "tfswitcher #{version}", shell_output("#{bin}/tfswitcher -V")
            end
          end
          EOF
      - uses: cpina/github-action-push-to-another-repository@main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
        with:
          source-directory: '.'
          destination-github-username: ASleepyCat
          destination-repository-name: homebrew-tap
          user-email: dyeom340@gmail.com
          target-branch: main
          commit-message: Update tfswitcher Formula to ${{ github.event.release.tag_name }}

  release:
    name: Release ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include: 
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive: tfswitcher-${{ github.event.release.tag_name }}-x86_64-unknown-linux-gnu.tar.gz
            archive-command: tar caf
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive: tfswitcher-${{ github.event.release.tag_name }}-x86_64-pc-windows-msvc.zip
            archive-command: 7z a
          - os: macos-latest
            target: x86_64-apple-darwin
            archive: tfswitcher-${{ github.event.release.tag_name }}-x86_64-apple-darwin.zip
            archive-command: zip -9
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Compile
        uses: houseabsolute/actions-rust-cross@v0
        with:
          target: ${{ matrix.target }}
          args: "--locked --release"
      - name: Upload release assets
        run: |
          ls target
          cd target/release
          ${{ matrix.archive-command }} ${{ matrix.archive }}
          shasum -a 256 ${{ matrix.archive }} > ${{ matrix.archive }}.sha256sum

          curl \
            --fail-with-body -sS \
            -X POST \
            --data-binary @"${{ matrix.archive }}" \
            -H 'Content-Type: application/octet-stream' \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "${{ github.event.release.upload_url }}?name=${{ matrix.archive }}"

          curl \
            --fail-with-body -sS \
            -X POST \
            --data-binary @"${{ matrix.archive }}.sha256sum" \
            -H 'Content-Type: text/plain' \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "${{ github.event.release.upload_url }}?name=${{ matrix.archive }}.sha256sum"
